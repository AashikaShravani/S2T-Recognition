name: Snyk Security Scan with Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily scan at midnight

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Matches your project's requirements

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Install Snyk CLI
        run: |
          npm install -g snyk
          snyk --version

      - name: Run Snyk test and generate report
        run: |
          snyk test --file=requirements.txt --json-file-output=snyk_results.json || true
          echo "Snyk scan completed"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Convert report to human-readable format
        run: |
          pip install tabulate
          python -c "
          import json, os
          from tabulate import tabulate
          
          with open('snyk_results.json') as f:
              data = json.load(f)
          
          vulns = []
          for vuln in data.get('vulnerabilities', []):
              vulns.append([
                  vuln['id'],
                  vuln['packageName'],
                  vuln['version'],
                  vuln['severity'],
                  vuln['title'],
                  vuln['url']
              ])
          
          with open('snyk_report.md', 'w') as f:
              f.write('# Snyk Security Scan Report\n\n')
              f.write(f'**Project**: {os.getenv("GITHUB_REPOSITORY")}\n')
              f.write(f'**Scan Date**: {os.getenv("GITHUB_RUN_ID")}\n\n')
              f.write('## Vulnerabilities Found\n')
              f.write(tabulate(vulns, 
                  headers=['ID', 'Package', 'Version', 'Severity', 'Title', 'URL'],
                  tablefmt='github'))
          "

      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: snyk-security-report
          path: |
            snyk_results.json
            snyk_report.md

      - name: Upload to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk_results.json

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('snyk_report.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
